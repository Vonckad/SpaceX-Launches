//
//  MainViewController.swift
//  SpaceX Launches
//
//  Created by Vlad Ralovich on 5.04.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainDisplayLogic: AnyObject
{
    func displaySomething(viewModel: Main.Something.ViewModel.viewModelData)
}

class MainViewController: UIViewController, MainDisplayLogic
{
  var interactor: MainBusinessLogic?
  var router: (NSObjectProtocol & MainRoutingLogic & MainDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = MainInteractor()
    let presenter = MainPresenter()
    let router = MainRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
    private var scrollView: UIScrollView!
    private var pageControl: UIPageControl!
  
  func doSomething()
  {
      interactor?.doSomething(request: .getSpaceRocket)
  }
  
    func displaySomething(viewModel: Main.Something.ViewModel.viewModelData)
  {
      switch viewModel {
      case .spaceRocket(let spaceRocket):
          print("spaceRocket.count = \(spaceRocket.count)")
          configureUI(with: spaceRocket)
      }
      
  }
    
    private func configureUI(with model: [SpaceRocketModel]) {

        pageControl = UIPageControl(frame: CGRect(x: 0, y: view.frame.size.height - 72, width: view.frame.size.width, height: 72))
        pageControl.numberOfPages = model.count
        pageControl.isUserInteractionEnabled = false
        pageControl.backgroundColor = .init(red: 18/255, green: 18/255, blue: 18/255, alpha: 1)
        pageControl.alpha = 0.95
        
        scrollView = UIScrollView(frame: CGRect(x: 0, y: 0, width: view.frame.size.width, height: view.frame.size.height))
        scrollView.contentSize = CGSize(width: CGFloat(model.count) * view.frame.size.width,
                                        height: view.frame.size.height)
        
        for (index, infModel) in model.enumerated() {
            let informationView = InformationView(frame: CGRect(
                                                            x: CGFloat(index) * view.frame.size.width,
                                                            y: 0,
                                                            width: view.frame.size.width,
                                                            height: view.frame.size.height))
            informationView.model = infModel
            informationView.applyData()
            scrollView.addSubview(informationView)
        }
        
        scrollView.delegate = self
        scrollView.isPagingEnabled = true
        scrollView.bounces = false
        scrollView.showsHorizontalScrollIndicator = false
        view.addSubview(scrollView)
        view.addSubview(pageControl)
    }
}

extension MainViewController: UIScrollViewDelegate {
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        pageControl.currentPage = Int(floor(Float(scrollView.contentOffset.x / scrollView.frame.size.width)))
    }
}
